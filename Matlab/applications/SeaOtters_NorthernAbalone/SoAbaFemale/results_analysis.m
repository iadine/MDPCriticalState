% function results_analysis(filedate,EOA)
% Action: This file produces the figures 1 & 2 for the paper
%         example: >>results_analysis('24-Jun-2011','A')
% INPUT: 
% filedate: is the date at which the result files have been
% generated. Look in the directory Results/ if unsure. In this version, the
% results file are directly generated by main_experts and main_SDP.
% EOA: takes values 'E' (experts performance), 'O' (optimal
% performance), or 'A' (both experts and optimal performace)
%
% OUTPUT: main figures in paper chades et al (2011) representing the
% "stable" abalone density and number of prey eaten/sea otter/day for each
% FR considered under different management scenarios (expert 1-4, optimal)
%
% SIDE EFFECT: 
% 'A': Make sure the results files have been generated on the same
% day or change name of each results file.
% 'E': Requires 4 experts.
%
% AUTHOR: Iadine Chades iadine.chades@csiro.au 18 of june 2011

function results_analysis(filedate,EOA)

global PARAM_SIG_FR PARAM_HYP_FR PARAM_LINEAR_FR DIR_results
% EOA= Experts only, Optimal only, All.
DIR_results='Results\';
if EOA=='E' || EOA==1
    EOA=1;
    M=dlmread([DIR_results,...
        filedate,'_results_Expert1.txt'],'',[0,0, 0, 4]);
    isAPoachEfficient=M(1); maxKAba = M(2);maxrAba=M(3);KSO = M(4); rSO=M(5);
elseif EOA=='O'|| EOA==2
    EOA=2;
M=dlmread([DIR_results,...
        filedate,'_results_VI.txt'],'',[0,0, 0, 4]);
    isAPoachEfficient=M(1); maxKAba = M(2);maxrAba=M(3);KSO = M(4); rSO=M(5);
elseif EOA=='A' || EOA==3
    EOA=3;
    M=dlmread([DIR_results,...
        filedate,'_results_Expert1.txt'],'',[0,0, 0, 4]);
    isAPoachEfficient=M(1); maxKAba = M(2);maxrAba=M(3);KSO = M(4); rSO=M(5);
end

% set defaults for optional inputs

load_param(isAPoachEfficient,maxKAba,maxrAba,KSO,rSO);

% A represents the map color for different expert/strategies
A=[
    0 1 0.2;
    0.1 0.1 0.1;
    0.5 0.5 0;
    0.5 0.5 0.5;
    0.0 0.5 1;
    ];

% Black and white figures.
Abw=[
    0 0 0;
    0.5 0.5 0.5;
    0 0 0;
    0.5 0.5 0.5;
    0.5 0.5 0.5;
    ];
% Initialise the parameters
v=length(PARAM_LINEAR_FR);      % v is the number of linear FR

nExpert=4+1;                    % 4 "experts" and an optimal cookie
res_exp=zeros(nExpert,v+4,8);   % v linear FR + 2 sig + 2 hyp

if EOA==1 || EOA==3
    % Retrieving the simulation results from files
    res_exp(1,:,:)=get_results([DIR_results,filedate,'_results_Expert1.txt']);
    res_exp(2,:,:)=get_results([DIR_results,filedate,'_results_Expert2.txt']);
    res_exp(3,:,:)=get_results([DIR_results,filedate,'_results_Expert3.txt']);
    res_exp(4,:,:)=get_results([DIR_results,filedate,'_results_Expert4.txt']);
end
if EOA==2 || EOA==3
    % Expert 5 is the optimal cookie
    res_exp(5,:,:)=get_results([DIR_results,filedate,'_results_VI.txt']);
end
% In addition we would like to calculate the corresponding "stable" number
% of prey eaten for each FR/expert strategy
Eaten_exp=zeros(nExpert,v+4);
Aba_exp=zeros(nExpert,v+4);         % Mean density of Abalone
Aba_std_exp=zeros(nExpert,v+4);     % Standard deviation
Aba100_exp=zeros(nExpert,v+4);      % Mean density of >100mm Abalone
Aba100_std_exp=zeros(nExpert,v+4);  % Standard deviation
for i=1:nExpert
    Aba_exp(i,:)=res_exp(i,:,3);
    Aba_std_exp(i,:)=res_exp(i,:,4);
    Aba100_exp(i,:)=res_exp(i,:,5);
    Aba100_std_exp(i,:)=res_exp(i,:,6);
end

% Begin figure 1
figure('color','white','name','Performance of optimal and expert strategies');
for iFR=1:3     % for each FR family
    if iFR==1   % SIG FR
        for iFRnum=1:2
            c= PARAM_SIG_FR.c(iFRnum);
            d= PARAM_SIG_FR.d(iFRnum);
            for iExpert=1:nExpert
                Eaten_exp(iExpert,iFRnum)=c*Aba_exp(iExpert,iFRnum)^2/...
                    (d+Aba_exp(iExpert,iFRnum)^2);
            end
            show_FR(iFR,iFRnum) % Plot FR
        end
    elseif iFR==2   % HYP FR
        for iFRnum=1:2
            c= PARAM_HYP_FR.c(iFRnum);
            d= PARAM_HYP_FR.d(iFRnum);
            for iExpert=1:nExpert
                Eaten_exp(iExpert,iFRnum+2)=c*Aba_exp(iExpert,iFRnum+2)/...
                    (d+Aba_exp(iExpert,iFRnum+2));
            end
            show_FR(iFR,iFRnum) % Plot FR
        end
    elseif iFR==3  % LINEAR FR
        for iFRnum=1:v
            d_max=PARAM_LINEAR_FR(iFRnum,1);
            Pemax=PARAM_LINEAR_FR(iFRnum,2);
            for iExpert=1:nExpert
                Eaten_exp(iExpert,iFRnum+4)=Pemax*...
                    Aba_exp(iExpert,iFRnum+4)/d_max;
            end
            show_FR(iFR,iFRnum) % Plot FR
        end
    end
end

if EOA==1 || EOA==3
    % PLOT density and # of prey eaten achieved for expert 1-4
    h(2)=plot(Aba_exp(1,:),Eaten_exp(1,:),'^','MarkerFaceColor',A(1,:),...
        'linewidth',1,'MarkerEdgeColor',A(1,:));hold on
    h(3)=plot(Aba_exp(2,:),Eaten_exp(2,:),'square','MarkerFaceColor',A(2,:),...
        'linewidth',1,'MarkerEdgeColor',A(2,:));hold on
    h(4)=plot(Aba_exp(3,:),Eaten_exp(3,:),'o','MarkerFaceColor',A(3,:),...
        'linewidth',1,'MarkerEdgeColor',A(3,:));hold on
    h(5)=plot(Aba_exp(4,:),Eaten_exp(4,:),'d','MarkerFaceColor',A(4,:),...
        'linewidth',1,'MarkerEdgeColor',A(4,:));hold on
    % PLOT density and # of prey eaten achieved for optimal cookie
end
if EOA==2 || EOA==3
    h(1)=plot(Aba_exp(5,:),Eaten_exp(5,:),'p','MarkerFaceColor',A(5,:),...
        'linewidth',1,'MarkerEdgeColor',A(5,:));hold on
end
if EOA==3
    legend(h(1:5),'Optimal','Anti-poaching','>60%K remove sea otters',...
        '>60%K 1/2(Anti-poaching and remove sea otters)','Do nothing',...
        'Location','SouthOutside')
    legend('boxoff')
elseif EOA==1
    legend(h(2:5),'Anti-poaching','>60%K remove sea otters',...
        '>60%K 1/2(Anti-poaching and remove sea otters)','Do nothing',...
        'Location','SouthOutside')
    legend('boxoff')
elseif EOA==2
    legend(h(1),'Optimal','Location','SouthOutside')
    legend('boxoff')
end

ylim([0 20]);
hold on

% End figure 1

% Begin figure 2A
figure('color','white','name','> 100mm Abalone')
if EOA==2 || EOA==3
    h(1)=errorbar(0.7:1:v+3.7,Aba100_exp(5,:),Aba100_std_exp(5,:),'p',...
        'MarkerFaceColor',Abw(5,:),'linewidth',1,'MarkerEdgeColor',Abw(5,:), ...
        'color',Abw(5,:)); hold on
end
if EOA==1 || EOA==3
    h(2)=errorbar(0.85:1:v+3.85,Aba100_exp(1,:),Aba100_std_exp(1,:),'^',...
        'MarkerFaceColor',Abw(1,:),'linewidth',1,'MarkerEdgeColor',Abw(1,:), ...
        'color',Abw(1,:)); hold on
    h(3)=errorbar(1.:v+4.,Aba100_exp(2,:),Aba100_std_exp(2,:),'s',...
        'MarkerFaceColor',Abw(2,:),'linewidth',1,'MarkerEdgeColor',Abw(2,:), ...
        'color',Abw(2,:)); hold on
    h(4)=errorbar(1.15:v+4.15,Aba100_exp(3,:),Aba100_std_exp(3,:),'o',...
        'MarkerFaceColor',Abw(3,:),'linewidth',1,'MarkerEdgeColor',Abw(3,:),...
        'color',A(3,:)); hold on
    h(5)=errorbar(1.3:v+4.3,Aba100_exp(4,:),Aba100_std_exp(4,:),'d',...
        'MarkerFaceColor',Abw(4,:),'linewidth',1,'MarkerEdgeColor',Abw(4,:),...
        'color',Abw(4,:)); hold on
end
box off
ylim([0 0.4]);
xlim([0 v+5]);
ylabel('Adult abalone density (m^{-2})')
xlabel('Functional responses');
set(gca, 'xticklabel',{'','Sig1','Sig2','Hyp1','Hyp2','L1','L2','L3',...
    'L4',''});
if EOA==3
    legend(h(1:5),'Optimal','Anti-poaching','>60%K remove sea otters',...
        '>60%K 1/2(Anti-poaching and remove sea otters)','Do nothing',...
        'Location','Best')
    legend('boxoff')
elseif EOA==1
    legend(h(2:5),'Anti-poaching','>60%K remove sea otters',...
        '>60%K 1/2(Anti-poaching and remove sea otters)','Do nothing',...
        'Location','Best')
    legend('boxoff')
elseif EOA==2
    legend(h(1),'Optimal','Location','Best')
    legend('boxoff')
end
% End figure 2A

% Begin figure 2B errorbar
figure('color','white','name','Whole abalone population')
if EOA==2 || EOA==3
    h(1)=errorbar(0.7:1:v+3.7,Aba_exp(5,:),Aba_std_exp(5,:),'p','MarkerFaceColor',...
        Abw(5,:),'linewidth',1,'MarkerEdgeColor',Abw(5,:), 'color',Abw(5,:)); hold on
end
if EOA==1 || EOA==3
    h(2)=errorbar(0.85:1:v+3.85,Aba_exp(1,:),Aba_std_exp(1,:),'^','MarkerFaceColor',...
        Abw(1,:),'linewidth',1,'MarkerEdgeColor',Abw(1,:), 'color',Abw(1,:)); hold on
    h(3)=errorbar(1.:v+4.,Aba_exp(2,:),Aba_std_exp(2,:),'s','MarkerFaceColor',...
        Abw(2,:),'linewidth',1,'MarkerEdgeColor',Abw(2,:), 'color',Abw(2,:)); hold on
    h(4)=errorbar(1.15:v+4.15,Aba_exp(3,:),Aba_std_exp(3,:),'o','MarkerFaceColor',...
        Abw(3,:),'linewidth',1,'MarkerEdgeColor',Abw(3,:), 'color',Abw(3,:)); hold on
    h(5)=errorbar(1.3:v+4.3,Aba_exp(4,:),Aba_std_exp(4,:),'d','MarkerFaceColor',...
        Abw(4,:),'linewidth',1,'MarkerEdgeColor',Abw(4,:), 'color',Abw(4,:)); hold on
end
box off
ylim([0 1.4]);
xlim([0 v+5]);
ylabel('Abalone density (m^{-2})');
xlabel('Functional responses');
set(gca, 'xticklabel',{'','Sig1','Sig2','Hyp1','Hyp2','L1','L2','L3',...
    'L4',''});
if EOA==3
    legend(h(1:5),'Optimal','Anti-poaching','>60%K remove sea otters',...
        '>60%K 1/2(Anti-poaching and remove sea otters)','Do nothing',...
        'Location','Best')
    legend('boxoff')
elseif EOA==1
    legend(h(2:5),'Anti-poaching','>60%K remove sea otters',...
        '>60%K 1/2(Anti-poaching and remove sea otters)','Do nothing',...
        'Location','Best')
    legend('boxoff')
elseif EOA==2
    legend(h(1),'Optimal','Location','Best')
    legend('boxoff')
end
% End figure 2B

end